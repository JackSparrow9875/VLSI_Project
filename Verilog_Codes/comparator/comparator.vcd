$date
	Fri Oct 27 03:20:32 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_comparator_four_bit $end
$scope module uut $end
$var wire 4 ! A [3:0] $end
$var wire 4 " B [3:0] $end
$var wire 4 # L_bits [3:0] $end
$var wire 4 $ G_bits [3:0] $end
$var wire 4 % E_bits [3:0] $end
$var reg 1 & Equal $end
$var reg 1 ' Greater_than $end
$var reg 1 ( Less_than $end
$scope module c0 $end
$var wire 1 ) A $end
$var wire 1 * B $end
$var wire 1 + E $end
$var wire 1 , G $end
$var wire 1 - L $end
$var wire 1 . and1_out $end
$var wire 1 / and2_out $end
$var wire 1 0 nA $end
$var wire 1 1 nB $end
$var wire 1 2 or1_out $end
$upscope $end
$scope module c1 $end
$var wire 1 3 A $end
$var wire 1 4 B $end
$var wire 1 5 E $end
$var wire 1 6 G $end
$var wire 1 7 L $end
$var wire 1 8 and1_out $end
$var wire 1 9 and2_out $end
$var wire 1 : nA $end
$var wire 1 ; nB $end
$var wire 1 < or1_out $end
$upscope $end
$scope module c2 $end
$var wire 1 = A $end
$var wire 1 > B $end
$var wire 1 ? E $end
$var wire 1 @ G $end
$var wire 1 A L $end
$var wire 1 B and1_out $end
$var wire 1 C and2_out $end
$var wire 1 D nA $end
$var wire 1 E nB $end
$var wire 1 F or1_out $end
$upscope $end
$scope module c3 $end
$var wire 1 G A $end
$var wire 1 H B $end
$var wire 1 I E $end
$var wire 1 J G $end
$var wire 1 K L $end
$var wire 1 L and1_out $end
$var wire 1 M and2_out $end
$var wire 1 N nA $end
$var wire 1 O nB $end
$var wire 1 P or1_out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0P
1O
1N
0M
0L
0K
0J
1I
0H
0G
0F
1E
1D
0C
0B
0A
0@
1?
0>
0=
0<
1;
1:
09
08
07
06
15
04
03
02
11
10
0/
0.
0-
0,
1+
0*
0)
x(
x'
x&
b1111 %
b0 $
b0 #
b0 "
b0 !
$end
#50000
0&
0(
1'
b1110 %
0+
12
00
b1 $
1,
1.
1)
b1 !
#100000
1(
0'
01
b1 #
1-
1/
10
b0 $
0,
0.
1*
0)
b1 "
b0 !
#150000
b1111 %
1+
02
0(
11
b0 #
0-
0/
0*
b0 "
#200000
