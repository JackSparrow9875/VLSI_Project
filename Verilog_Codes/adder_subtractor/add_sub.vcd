$date
	Fri Nov  3 02:19:31 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_four_bit_adder_subtractor $end
$scope module UUT $end
$var wire 4 ! A [3:0] $end
$var wire 4 " B [3:0] $end
$var wire 1 # B0 $end
$var wire 1 $ B1 $end
$var wire 1 % B2 $end
$var wire 1 & B3 $end
$var wire 1 ' m $end
$var wire 1 ( c2 $end
$var wire 1 ) c1 $end
$var wire 1 * c0 $end
$var wire 4 + Sum [3:0] $end
$var wire 1 , Carry $end
$scope module fa0 $end
$var wire 1 - a $end
$var wire 1 # b $end
$var wire 1 . c1 $end
$var wire 1 / c2 $end
$var wire 1 0 c3 $end
$var wire 1 ' c_in $end
$var wire 1 * carry $end
$var wire 1 1 sum $end
$var wire 1 2 w1 $end
$upscope $end
$scope module fa1 $end
$var wire 1 3 a $end
$var wire 1 $ b $end
$var wire 1 4 c1 $end
$var wire 1 5 c2 $end
$var wire 1 6 c3 $end
$var wire 1 * c_in $end
$var wire 1 ) carry $end
$var wire 1 7 sum $end
$var wire 1 8 w1 $end
$upscope $end
$scope module fa2 $end
$var wire 1 9 a $end
$var wire 1 % b $end
$var wire 1 : c1 $end
$var wire 1 ; c2 $end
$var wire 1 < c3 $end
$var wire 1 ) c_in $end
$var wire 1 ( carry $end
$var wire 1 = sum $end
$var wire 1 > w1 $end
$upscope $end
$scope module fa3 $end
$var wire 1 ? a $end
$var wire 1 & b $end
$var wire 1 @ c1 $end
$var wire 1 A c2 $end
$var wire 1 B c3 $end
$var wire 1 ( c_in $end
$var wire 1 , carry $end
$var wire 1 C sum $end
$var wire 1 D w1 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1D
0C
1B
0A
0@
1?
1>
0=
1<
0;
0:
19
18
07
06
15
04
03
02
01
00
0/
1.
1-
1,
b0 +
1*
1)
1(
0'
0&
0%
1$
1#
b11 "
b1101 !
$end
#20000
1=
1C
12
0.
05
0>
1:
1;
0D
1@
1A
16
0#
0$
1%
1&
b1100 +
01
0/
10
13
1'
b1111 !
#40000
0C
0A
0B
0(
0;
17
0)
b110 +
1=
08
06
1>
0:
0<
03
09
b1001 !
#60000
