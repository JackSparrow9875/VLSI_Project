$date
	Wed Oct 25 01:54:29 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_four_bit_adder_subtractor $end
$scope module uut $end
$var wire 4 ! a [3:0] $end
$var wire 1 " add_subtract $end
$var wire 4 # b [3:0] $end
$var wire 1 $ carry_in $end
$var wire 1 % carry_out $end
$var wire 4 & result [3:0] $end
$var wire 1 ' carry $end
$var wire 4 ( c [3:0] $end
$scope module f0 $end
$var wire 1 ) a $end
$var wire 1 " add_subtract $end
$var wire 1 * b $end
$var wire 1 + carry $end
$var wire 1 $ carry_in $end
$var wire 1 , carry_out $end
$var wire 1 - g $end
$var wire 1 . p $end
$var wire 1 / sum $end
$upscope $end
$scope module f1 $end
$var wire 1 0 a $end
$var wire 1 " add_subtract $end
$var wire 1 1 b $end
$var wire 1 2 carry $end
$var wire 1 3 carry_in $end
$var wire 1 4 carry_out $end
$var wire 1 5 g $end
$var wire 1 6 p $end
$var wire 1 7 sum $end
$upscope $end
$scope module f2 $end
$var wire 1 8 a $end
$var wire 1 " add_subtract $end
$var wire 1 9 b $end
$var wire 1 : carry $end
$var wire 1 ; carry_in $end
$var wire 1 < carry_out $end
$var wire 1 = g $end
$var wire 1 > p $end
$var wire 1 ? sum $end
$upscope $end
$scope module f3 $end
$var wire 1 @ a $end
$var wire 1 " add_subtract $end
$var wire 1 A b $end
$var wire 1 ' carry $end
$var wire 1 B carry_in $end
$var wire 1 C carry_out $end
$var wire 1 D g $end
$var wire 1 E p $end
$var wire 1 F sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb_four_bit_adder_subtractor $end
$var reg 1 G clk $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0G
0F
1E
0D
0C
1B
0A
1@
0?
1>
0=
0<
1;
1:
09
18
17
16
05
04
03
12
11
00
0/
0.
0-
0,
0+
0*
0)
bz110 (
1'
b10 &
1%
0$
b10 #
0"
b1100 !
$end
#5000
1G
#10000
0G
