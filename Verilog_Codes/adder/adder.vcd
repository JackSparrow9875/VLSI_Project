$date
	Wed Oct 25 17:15:03 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench_four_bit_adder $end
$scope module uut $end
$var wire 4 ! a [3:0] $end
$var wire 4 " b [3:0] $end
$var wire 1 # c $end
$var wire 4 $ sum [3:0] $end
$var wire 1 % carry $end
$var wire 1 & c2 $end
$var wire 1 ' c1 $end
$var wire 1 ( c0 $end
$scope module f0 $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 # c3 $end
$var wire 1 ( carry $end
$var wire 1 + p $end
$var wire 1 , q $end
$var wire 1 - r $end
$var wire 1 . sum $end
$upscope $end
$scope module f1 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 ( c3 $end
$var wire 1 ' carry $end
$var wire 1 1 p $end
$var wire 1 2 q $end
$var wire 1 3 r $end
$var wire 1 4 sum $end
$upscope $end
$scope module f2 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 ' c3 $end
$var wire 1 & carry $end
$var wire 1 7 p $end
$var wire 1 8 q $end
$var wire 1 9 r $end
$var wire 1 : sum $end
$upscope $end
$scope module f3 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 & c3 $end
$var wire 1 % carry $end
$var wire 1 = p $end
$var wire 1 > q $end
$var wire 1 ? r $end
$var wire 1 @ sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1@
0?
0>
0=
0<
0;
0:
09
18
17
16
05
04
03
12
11
00
1/
0.
1-
0,
0+
1*
1)
1(
1'
1&
0%
b1000 $
0#
b101 "
b11 !
$end
#10000
1%
b0 $
0@
1>
1=
06
1<
15
b1001 "
b111 !
#20000
