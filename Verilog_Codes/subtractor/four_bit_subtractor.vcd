$date
	Wed Oct 25 00:20:54 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench_four_bit_subtractor $end
$var wire 4 ! difference [3:0] $end
$var wire 1 " carry $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % borrow $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % borrow $end
$var wire 4 ( difference [3:0] $end
$var wire 1 " carry $end
$var wire 1 ) c2 $end
$var wire 1 * c1 $end
$var wire 1 + c0 $end
$scope module fs0 $end
$var wire 1 + borrow $end
$var wire 1 % borrow_in $end
$var wire 1 , difference $end
$var wire 1 - minuend $end
$var wire 1 . p $end
$var wire 1 / q $end
$var wire 1 0 r $end
$var wire 1 1 subtrahend $end
$upscope $end
$scope module fs1 $end
$var wire 1 * borrow $end
$var wire 1 + borrow_in $end
$var wire 1 2 difference $end
$var wire 1 3 minuend $end
$var wire 1 4 p $end
$var wire 1 5 q $end
$var wire 1 6 r $end
$var wire 1 7 subtrahend $end
$upscope $end
$scope module fs2 $end
$var wire 1 ) borrow $end
$var wire 1 * borrow_in $end
$var wire 1 8 difference $end
$var wire 1 9 minuend $end
$var wire 1 : p $end
$var wire 1 ; q $end
$var wire 1 < r $end
$var wire 1 = subtrahend $end
$upscope $end
$scope module fs3 $end
$var wire 1 " borrow $end
$var wire 1 ) borrow_in $end
$var wire 1 > difference $end
$var wire 1 ? minuend $end
$var wire 1 @ p $end
$var wire 1 A q $end
$var wire 1 B r $end
$var wire 1 C subtrahend $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
1:
19
08
17
16
05
04
13
12
11
00
1/
1.
0-
1,
1+
1*
0)
b11 (
b11 '
b110 &
0%
b11 $
b110 #
0"
b11 !
$end
#10000
1*
1)
12
16
1<
10
1+
18
0/
0>
0:
0.
1@
b111 !
b111 (
1,
07
1=
1-
03
1?
1%
b101 $
b101 '
b1101 #
b1101 &
#20000
1>
0)
0<
06
08
0+
14
15
1:
b1010 !
b1010 (
0,
00
01
17
0=
0-
0%
b10 $
b10 '
b1100 #
b1100 &
#30000
